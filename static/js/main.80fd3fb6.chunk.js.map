{"version":3,"sources":["quickfoodslogo.png","wallpaper3.gif","components/ButtonAdd.js","components/ItemInCartCount.js","components/FoodItemCard.js","components/SearchBar.js","views/HomePageView.js","App.js","serviceWorker.js","views/CartView.js","index.js"],"names":["module","exports","ButtonAdd","className","style","buttonstyle","onClick","this","props","Component","width","height","borderStyle","backgroundColor","borderWidth","borderColor","color","fontSize","borderRadius","ItemInCartCount","counterStyle","textAlign","count","FoodItemCard","increaseCount","newCount","state","setState","decreaseCount","outercontainer","paddingTop","item","itemname","price","marginTop","boxShadow","SearchBar","containerstyle","padding","alt","src","quickfoods","align","namecontainer","type","placeholder","inputText","onChange","backgroundAttachment","fontFamily","paddingRight","borderBottomStyle","borderBottomWidth","borderBottomColor","HomePageView","showCart","displayCart","hideCart","search","term","toLowerCase","includes","searchHandler","event","searchterm","target","value","updateNumberOfItems","nItems","updateCart","present","newCart","cart","length","forEach","cartItem","newItem","push","menu","isAdd","document","title","getData","axios","get","then","res","data","loading","to","pathname","Button","size","filter","slice","map","key","paddingBottom","marginBottom","variant","App","Boolean","window","location","hostname","match","CartView","totalPrice","totalprice","quantity","totalAmount","i","body","wallpaper","Routing","basename","process","exact","path","component","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80fd3fb6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/quickfoodslogo.4c410abf.png\";","module.exports = __webpack_public_path__ + \"static/media/wallpaper3.b5fd3fbe.gif\";","import React, { Component } from \"react\";\r\n\r\nexport default class ButtonAdd extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <button style={buttonstyle} onClick={this.props.onClick}>\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst buttonstyle = {\r\n  width: \"70px\",\r\n  height: \"30px\",\r\n  borderStyle: \"solid\",\r\n  backgroundColor: \"white\",\r\n  borderWidth: \"3px\",\r\n  borderColor: \"#34a4eb\",\r\n  color: \"black\",\r\n  fontSize: \"1em\",\r\n  borderRadius: \"15px\"\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class ItemInCartCount extends Component {\r\n  render() {\r\n    return (\r\n      <div style={counterStyle}>\r\n        <p style={{ textAlign: \"center\" }}>{this.props.count}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst counterStyle = {\r\n  borderStyle: \"solid\",\r\n  backgroundColor: \"white\",\r\n  borderWidth: \"3px\",\r\n  borderColor: \"#34a4eb\",\r\n  width: \"40%\",\r\n  height: \"75%\",\r\n  color: \"black\",\r\n  borderRadius: \"15px\"\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ButtonAdd from \"./ButtonAdd\";\r\nimport ItemInCartCount from \"./ItemInCartCount\";\r\n//import ButtonDelete from \"./ButtonDelete\";\r\nexport default class FoodItemCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 0\r\n    };\r\n  }\r\n  increaseCount = () => {\r\n    let newCount = this.state.count;\r\n    newCount = newCount + 1;\r\n    this.setState({ count: newCount });\r\n  };\r\n  decreaseCount = () => {\r\n    let newCount = this.state.count;\r\n    if (newCount > 0) {\r\n      newCount = newCount - 1;\r\n    }\r\n    this.setState({ count: newCount });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"container\" style={outercontainer}>\r\n        <div className=\"row\" style={{ paddingTop: \"20px\" }}>\r\n          <div className=\"col text-left\">\r\n            <h4>{this.props.item.itemname}</h4>\r\n          </div>\r\n          <div className=\"col text-right\">\r\n            <h3>Rs. {this.props.item.price}</h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\" style={{ marginTop: \"40px\" }}>\r\n          <div className=\"col-4 \">\r\n            <ItemInCartCount count={this.state.count} />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            {/* <ButtonDelete\r\n              onClick={() => {\r\n                this.decreaseCount();\r\n                this.props.onClick();\r\n              }}\r\n            /> */}\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <ButtonAdd\r\n              onClick={() => {\r\n                this.increaseCount();\r\n                this.props.onClick();\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst outercontainer = {\r\n  boxShadow: \"2px 0px 4px white\",\r\n  width: \"290px\",\r\n  height: \"200px\",\r\n  borderStyle: \"solid\",\r\n  borderRadius: \"15px\",\r\n  borderColor: \"#6b6d70\",\r\n  backgroundColor: \"#2d425e\",\r\n  color: \"white\"\r\n};\r\n","import React, { Component } from \"react\";\r\nimport quickfoods from \"../quickfoodslogo.png\";\r\nexport default class SearchBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" style={containerstyle}>\r\n        <div className=\"row\" style={{ padding: \"3%\" }}>\r\n          <div className=\"col-1 \">\r\n            <img alt=\"Logo\" src={quickfoods} width=\"50px\"></img>\r\n          </div>\r\n          <div className=\"col-2 \" align=\"left\" style={namecontainer}>\r\n            <h1>QuickFoods</h1>\r\n          </div>\r\n          <div className=\"col-8\" align=\"center\" style={{ marginTop: \"2%\" }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Find your tongue's desire\"\r\n              style={inputText}\r\n              onChange={this.props.onChange}\r\n            ></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst containerstyle = {\r\n  backgroundColor: \"#151e2b\",\r\n  boxShadow: \"2px 0px 4px #eb4934\",\r\n  backgroundAttachment: \"fixed\"\r\n};\r\nconst namecontainer = {\r\n  color: \"white\",\r\n  marginTop: \"2%\"\r\n};\r\n\r\nconst inputText = {\r\n  fontFamily: \"\",\r\n  backgroundColor: \"#151e2b\",\r\n  fontSize: \"1.2em\",\r\n  paddingRight: \"4%\",\r\n  textAlign: \"right\",\r\n  color: \"white\",\r\n  width: \"80%\",\r\n  height: \"40px\",\r\n  borderStyle: \"none\",\r\n  borderBottomStyle: \"solid\",\r\n  borderBottomWidth: \"4px\",\r\n  borderBottomColor: \"#eb4934\"\r\n};\r\n","import React, { Component } from \"react\";\r\nimport FoodItemCard from \"../components/FoodItemCard.js\";\r\nimport axios from \"axios\";\r\nimport SearchBar from \"../components/SearchBar.js\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class HomePageView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      menu: [],\r\n      searchterm: \"\",\r\n      nItems: 6,\r\n      cart: [],\r\n      displayCart: false,\r\n      isAdd: true\r\n    };\r\n    const url = \"https://api.jsonbin.io/b/5dd2b22a2e22356f234db9d2\";\r\n    document.title = \"QuickFoods Home\";\r\n  }\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n  async getData() {\r\n    await axios.get(\"https://api.jsonbin.io/b/5dd2b22a2e22356f234db9d2\").then(res => {\r\n      this.setState({ menu: res.data });\r\n    });\r\n    this.setState({ loading: false });\r\n  }\r\n  showCart = () => {\r\n    this.setState({ displayCart: true });\r\n  };\r\n  hideCart = () => {\r\n    this.setState({ displayCart: false });\r\n  };\r\n  search = term => {\r\n    return function (item) {\r\n      return item.itemname.toLowerCase().includes(term.toLowerCase()) || !item;\r\n    };\r\n  };\r\n  searchHandler = event => {\r\n    this.setState({ searchterm: event.target.value });\r\n  };\r\n  updateNumberOfItems = () => {\r\n    this.setState({ nItems: this.state.nItems + 3 });\r\n  };\r\n\r\n  updateCart = item => {\r\n    var present = false;\r\n    var newCart = this.state.cart;\r\n    if (newCart.length !== 0) {\r\n      newCart.forEach(cartItem => {\r\n        if (cartItem.item.itemname === item.itemname) {\r\n          cartItem.count += 1;\r\n          this.setState({ cart: newCart });\r\n          present = true;\r\n        }\r\n      });\r\n    }\r\n    if (present === false) {\r\n      var newItem = { item, count: 1 };\r\n      newCart.push(newItem);\r\n      this.setState({ cart: newCart });\r\n    }\r\n  };\r\n  render() {\r\n    if (this.state.loading === true) {\r\n      return <h1>Loading ....</h1>;\r\n    }\r\n    const menu = this.state.menu;\r\n\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <SearchBar onChange={this.searchHandler} />\r\n        </div>\r\n        <div className=\"row justify-content-center\" style={{ marginTop: \"2%\" }}>\r\n          <Link to={{ pathname: \"/cart\", state: { cart: this.state.cart } }}>\r\n            <Button\r\n              className=\"btn\"\r\n              size=\"lg\"\r\n              style={{\r\n                backgroundColor: \"#334580\",\r\n                borderColor: \"#334580\"\r\n              }}\r\n            >\r\n              Proceed To Cart\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"row\">\r\n          {menu\r\n            .filter(this.search(this.state.searchterm))\r\n            .slice(0, this.state.nItems)\r\n            .map(item => (\r\n              <div\r\n                key={item.itemname}\r\n                className=\"col-4\"\r\n                style={{ paddingTop: \"3%\", paddingBottom: \"2%\" }}\r\n              >\r\n                <FoodItemCard\r\n                  item={item}\r\n                  onClick={() => this.updateCart(item)}\r\n                />\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          {this.state.nItems < menu.length ? (\r\n            <Button\r\n              style={{ marginBottom: \"2%\" }}\r\n              variant=\"dark\"\r\n              size=\"lg\"\r\n              onClick={this.updateNumberOfItems}\r\n            >\r\n              Click for more\r\n            </Button>\r\n          ) : (\r\n              <div className=\"alert alert-info\">\r\n                That's It <strong>Folks</strong> ! We'll ask the{\" \"}\r\n                <strong>Chef</strong> to add more items\r\n            </div>\r\n            )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport HomePageView from \"./views/HomePageView.js\";\nimport { Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePageView />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class CartView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    document.title = \"QuickFoods Cart\";\r\n  }\r\n\r\n  render() {\r\n    let { cart } = this.props.location.state;\r\n    let displayCart = [];\r\n    let count = 0;\r\n    cart.forEach(cartItem => {\r\n      var totalPrice = cartItem.item.price * cartItem.count;\r\n      displayCart.push({\r\n        itemname: cartItem.item.itemname,\r\n        price: cartItem.item.price,\r\n        totalprice: totalPrice,\r\n        quantity: cartItem.count\r\n      });\r\n    });\r\n    let totalAmount = 0;\r\n    for (var i = 0; i < displayCart.length; i++) {\r\n      totalAmount += displayCart[i].totalprice;\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <table\r\n          className=\"table table-hover table-dark\"\r\n          style={{ color: \"white\", marginTop: \"5%\" }}\r\n        >\r\n          <thead className=\"thead-light\">\r\n            <th>#</th>\r\n            <th>Item</th>\r\n            <th>Price(per item)</th>\r\n            <th>Quantity</th>\r\n            <th>Price</th>\r\n          </thead>\r\n          {cart.length > 0 ? (\r\n            displayCart.map(item => (\r\n              <tr>\r\n                <th>{++count}</th>\r\n                <td>{item.itemname}</td>\r\n                <td>{item.price}</td>\r\n                <td>{item.quantity}</td>\r\n                <td>{item.totalprice}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <div className=\"alert alert-info\" style={{ marginTop: \"3%\" }}>\r\n              Your cart is <strong>empty</strong>, Don't leave empty-handed !\r\n            </div>\r\n          )}\r\n\r\n          <tfoot>\r\n            <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <th>Total</th>\r\n              <th>{totalAmount}</th>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-1\">\r\n            <Link to=\"/\">\r\n              <Button variant=\"secondary\">Back</Button>\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-1\">\r\n            {cart.length > 0 ? (\r\n              <Link to=\"/\">\r\n                <Button variant=\"success\">Order</Button>\r\n              </Link>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport CartView from \"./views/CartView.js\";\nimport wallpaper from \"./wallpaper3.gif\";\n\ndocument.body.style = \"background-image:url(\" + wallpaper + \")\";\ndocument.body.style.backgroundAttachment = \"fixed\";\n\nconst Routing = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <div>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/cart\" component={CartView} />\n    </div>\n  </BrowserRouter>\n);\n\nReactDOM.render(Routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}